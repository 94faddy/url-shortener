// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?   // เพิ่มฟิลด์ password
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  urls     Url[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Url {
  id          String   @id @default(cuid())
  originalUrl String   @db.Text
  shortCode   String   @unique
  title       String?
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expiresAt   DateTime?
  isActive    Boolean  @default(true)
  
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  clicks    Click[]
  analytics Analytics[]

  @@index([userId])
  @@index([shortCode])
}

model Click {
  id          String   @id @default(cuid())
  urlId       String
  userAgent   String?  @db.Text
  referer     String?  @db.Text
  ipAddress   String?
  
  // Location data from IP geolocation
  country     String?  // Country code (e.g., "TH", "US")
  countryName String?  // Full country name (e.g., "Thailand", "United States")
  region      String?  // State/Province
  city        String?  // City name
  timezone    String?  // Timezone (e.g., "Asia/Bangkok")
  latitude    Float?   // Latitude coordinate
  longitude   Float?   // Longitude coordinate
  isp         String?  @db.Text // Internet Service Provider
  
  clickedAt   DateTime @default(now())

  url Url @relation(fields: [urlId], references: [id], onDelete: Cascade)

  @@index([urlId])
  @@index([country])
  @@index([clickedAt])
  @@index([urlId, clickedAt])
}

model Analytics {
  id          String   @id @default(cuid())
  urlId       String
  date        DateTime
  clicks      Int      @default(0)
  uniqueClicks Int     @default(0)
  countries   Json?
  referrers   Json?
  userAgents  Json?

  url Url @relation(fields: [urlId], references: [id], onDelete: Cascade)

  @@unique([urlId, date])
  @@index([urlId])
  @@index([date])
}